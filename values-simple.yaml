# This is currently configured as an 'all in one' deployment

clusterGroup:
  name: simple
  isHubCluster: true
  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - openshift-sandboxed-containers-operator
  - trustee-operator-system
  - hello-openshift
  - cert-manager-operator
  - cert-manager
  - lets-encrypt

  # AI stuff 
  - redhat-ods-operator
  - openshift-pipelines
  - openshift-storage
  - openshift-nfd
  - nvidia-gpu-operator
  - openshift-serverless
  - knative-serving


  subscriptions:
    # ACM is kept anticipating 
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.11

    sandbox:
      name: sandboxed-containers-operator
      namespace: openshift-sandboxed-containers-operator
      channel: stable
      version: "1.8.0" # ask for latest

    trustee:
      name: trustee-operator
      namespace: trustee-operator-system
      source: redhat-operators
      channel: stable

    cert-manager:
      name: openshift-cert-manager-operator
      namespace: cert-manager-operator
      channel: stable-v1

  projects:
  - hub
  - vault
  - trustee
  - auth
  - golang-external-secrets
  - sandbox
  - openshift-storage
  - science-project
  - hello-openshift
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  sharedValueFiles:
  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
        - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: vault
      chart: hashicorp-vault
      chartVersion: 0.1.*

    secrets-operator:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: golang-external-secrets
      chart: golang-external-secrets
      chartVersion: 0.1.*

    trustee:
      name: trustee
      namespace: kbs-operator-system #upstream config
      project: trustee
      path: charts/hub/trustee

    sandbox:
      name: sandbox
      namespace: openshift-sandboxed-containers-operator #upstream config
      project: sandbox
      path: charts/all/sandbox
      ignoreDifferences:
      - group: ""
        name: peer-pods-cm
        kind: ConfigMap
        jsonPointers:
        - /data/AZURE_IMAGE_ID # Required so the vm image doesn't get nuked.

    letsencrypt:
      name: letsencrypt
      namespace: letsencrypt
      project: default
      path: charts/all/letsencrypt

    hello-openshift:
      name: hello-openshift
      namespace: hello-openshift
      project: hello-openshift
      path: charts/coco-supported/hello-openshift
      ## AI STUFF Beneath here

    htpassword:
      name: htpassword
      namespace: openshift-config
      project: auth
      path: charts/all/htpassword

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: common/ansible/playbooks/hello-world/hello-world.yaml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"
  managedClusterGroups:
    exampleRegion:
      name: group-one
      acmlabels:
      - name: clusterGroup
        value: group-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false